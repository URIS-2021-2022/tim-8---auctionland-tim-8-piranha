// <auto-generated />
using System;
using BuyerMicroservice.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuyerMicroservice.Migrations
{
    [DbContext(typeof(BuyerContext))]
    [Migration("20220222225001_BuyerDB1")]
    partial class BuyerDB1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuthorizedPersonBuyer", b =>
                {
                    b.Property<Guid>("authorizedPersonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("buyersbuyerID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("authorizedPersonID", "buyersbuyerID");

                    b.HasIndex("buyersbuyerID");

                    b.ToTable("AuthorizedPersonBuyer");
                });

            modelBuilder.Entity("BuyerMicroservice.Entities.AuthorizedPerson", b =>
                {
                    b.Property<Guid>("authorizedPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("boardNumbID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("boardNumberID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personalDocNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("authorizedPersonID");

                    b.HasIndex("boardNumberID");

                    b.ToTable("authorizedPerson");

                    b.HasData(
                        new
                        {
                            authorizedPersonID = new Guid("93a08cc2-1d17-46e6-bd95-4fa70bb11226"),
                            address = "Mira popare 11",
                            boardNumbID = new Guid("21200907-0d08-44f3-8506-dc807ca2215b"),
                            country = "Srbija",
                            name = "Dimitrije",
                            personalDocNum = "8767834637274",
                            surname = "Corlija"
                        },
                        new
                        {
                            authorizedPersonID = new Guid("07af89f2-feee-4680-b489-9d0e31699588"),
                            address = "Bulevar Oslobodjenja 55",
                            boardNumbID = new Guid("21200907-0d08-44f3-8506-dc807ca2215b"),
                            country = "Zrenjanin",
                            name = "Marko",
                            personalDocNum = "8227834666274",
                            surname = "Markovic"
                        });
                });

            modelBuilder.Entity("BuyerMicroservice.Entities.BoardNumber", b =>
                {
                    b.Property<Guid>("boardNumberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.HasKey("boardNumberID");

                    b.ToTable("boardNumber");

                    b.HasData(
                        new
                        {
                            boardNumberID = new Guid("8d951bd9-497a-47ec-b1a7-c944492f4c8c"),
                            number = 5
                        },
                        new
                        {
                            boardNumberID = new Guid("2018f35a-f49b-462f-a1c9-a105f297864b"),
                            number = 10
                        });
                });

            modelBuilder.Entity("BuyerMicroservice.Entities.Buyer", b =>
                {
                    b.Property<Guid>("buyerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuyerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("addressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("durationOfBanInYear")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("endDateOfBan")
                        .HasColumnType("datetime2");

                    b.Property<bool>("hasBan")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("paymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("priorityID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("realizedArea")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startDateOfBan")
                        .HasColumnType("datetime2");

                    b.HasKey("buyerID");

                    b.HasIndex("priorityID");

                    b.ToTable("buyer");

                    b.HasDiscriminator<string>("BuyerType").HasValue("Buyer");
                });

            modelBuilder.Entity("BuyerMicroservice.Entities.ContactPerson", b =>
                {
                    b.Property<Guid>("contactPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("contactPersonID");

                    b.ToTable("contactPerson");

                    b.HasData(
                        new
                        {
                            contactPersonID = new Guid("e54364be-1fe6-43b5-9401-8b8bd2165aba"),
                            name = "Petar",
                            phone = "0629349583",
                            surname = "Petrovic"
                        },
                        new
                        {
                            contactPersonID = new Guid("68bf5d70-f26b-4c53-b014-bab74b7b86a0"),
                            name = "Miljan",
                            phone = "06559349583",
                            surname = "Peric"
                        });
                });

            modelBuilder.Entity("BuyerMicroservice.Entities.Priority", b =>
                {
                    b.Property<Guid>("priorityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("priorityType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("priorityID");

                    b.ToTable("priority");

                    b.HasData(
                        new
                        {
                            priorityID = new Guid("784c7edd-c937-45e6-a493-f0b8dedab85f"),
                            priorityType = "1"
                        },
                        new
                        {
                            priorityID = new Guid("21200907-0d08-44f3-8506-dc807ca2215b"),
                            priorityType = "2"
                        });
                });

            modelBuilder.Entity("BuyerMicroservice.Entities.Individual", b =>
                {
                    b.HasBaseType("BuyerMicroservice.Entities.Buyer");

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Individual");

                    b.HasData(
                        new
                        {
                            buyerID = new Guid("0ec20a3b-fd39-4c2e-8062-7d1664eb5381"),
                            accountNumber = "4224234876",
                            addresse = "Prvomajska 5",
                            durationOfBanInYear = 1,
                            email = "dinoR@gmail.com",
                            endDateOfBan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            hasBan = true,
                            name = "Dino",
                            phone1 = "062987999",
                            phone2 = "-0654442223",
                            priorityID = new Guid("784c7edd-c937-45e6-a493-f0b8dedab85f"),
                            realizedArea = 3,
                            startDateOfBan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JMBG = "1102999765578",
                            surname = "Ristic"
                        });
                });

            modelBuilder.Entity("BuyerMicroservice.Entities.LegalEntity", b =>
                {
                    b.HasBaseType("BuyerMicroservice.Entities.Buyer");

                    b.Property<string>("fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("LegalEntity");

                    b.HasData(
                        new
                        {
                            buyerID = new Guid("861f142c-4707-416d-ad14-7debbd2031ed"),
                            accountNumber = "0074234876",
                            addresse = "8765439744578",
                            durationOfBanInYear = 1,
                            email = "rosa@gmail.com",
                            endDateOfBan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            hasBan = true,
                            name = "Rosa",
                            phone1 = "061999999",
                            phone2 = "067662529",
                            priorityID = new Guid("784c7edd-c937-45e6-a493-f0b8dedab85f"),
                            realizedArea = 3,
                            startDateOfBan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            fax = "212693-2377",
                            identificationNumber = "12121212333"
                        });
                });

            modelBuilder.Entity("AuthorizedPersonBuyer", b =>
                {
                    b.HasOne("BuyerMicroservice.Entities.AuthorizedPerson", null)
                        .WithMany()
                        .HasForeignKey("authorizedPersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuyerMicroservice.Entities.Buyer", null)
                        .WithMany()
                        .HasForeignKey("buyersbuyerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuyerMicroservice.Entities.AuthorizedPerson", b =>
                {
                    b.HasOne("BuyerMicroservice.Entities.BoardNumber", "board")
                        .WithMany()
                        .HasForeignKey("boardNumberID");

                    b.Navigation("board");
                });

            modelBuilder.Entity("BuyerMicroservice.Entities.Buyer", b =>
                {
                    b.HasOne("BuyerMicroservice.Entities.Priority", "priority")
                        .WithMany()
                        .HasForeignKey("priorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("priority");
                });
#pragma warning restore 612, 618
        }
    }
}
