// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PublicBidding.Entities;

namespace PublicBidding.Migrations
{
    [DbContext(typeof(PublicBiddingContext))]
    partial class PublicBiddingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PublicBidding.Entities.PublicBidding", b =>
                {
                    b.Property<Guid>("PublicBiddingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BestBidder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("DepositSupplement")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsExcepted")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfApplicants")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RentPeriod")
                        .HasColumnType("int");

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.Property<double>("StartPricePerHa")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PublicBiddingId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("PublicBiddings");

                    b.HasData(
                        new
                        {
                            PublicBiddingId = new Guid("d7d314b0-2f22-4af5-8909-238b23383249"),
                            AddressId = new Guid("01f759bd-fb38-49f5-a4a7-f8a938fbd541"),
                            Date = new DateTime(2018, 12, 10, 1, 0, 0, 0, DateTimeKind.Local),
                            DepositSupplement = 120.5,
                            EndTime = new DateTime(2018, 12, 10, 16, 45, 0, 0, DateTimeKind.Local),
                            IsExcepted = false,
                            NumberOfApplicants = 1,
                            Price = 600.5,
                            RentPeriod = 2,
                            Round = 4,
                            StartPricePerHa = 500.35000000000002,
                            StartTime = new DateTime(2018, 12, 10, 14, 45, 0, 0, DateTimeKind.Local),
                            StatusId = new Guid("2233cbba-607a-4182-9f83-7ff8ffe6e5ac"),
                            TypeId = new Guid("8010f254-e872-49d9-9c2c-1d5783719019")
                        },
                        new
                        {
                            PublicBiddingId = new Guid("62c28c9a-7306-45c7-a5b3-1603eed4fd5a"),
                            AddressId = new Guid("50394b74-3ed0-4364-a8f2-aeb0bcb783ef"),
                            Date = new DateTime(2018, 8, 9, 2, 0, 0, 0, DateTimeKind.Local),
                            DepositSupplement = 200.19999999999999,
                            EndTime = new DateTime(2018, 8, 9, 19, 45, 0, 0, DateTimeKind.Local),
                            IsExcepted = false,
                            NumberOfApplicants = 4,
                            Price = 1800.4000000000001,
                            RentPeriod = 4,
                            Round = 2,
                            StartPricePerHa = 1200.5999999999999,
                            StartTime = new DateTime(2018, 8, 9, 17, 45, 0, 0, DateTimeKind.Local),
                            StatusId = new Guid("770a32d4-1db9-4844-868e-6bf8171ffc20"),
                            TypeId = new Guid("9b926999-151c-458c-8ae8-3d4a7e9f6459")
                        });
                });

            modelBuilder.Entity("PublicBidding.Entities.PublicBiddingAuthorizedPerson", b =>
                {
                    b.Property<Guid>("PublicBiddingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorizedPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PublicBiddingId", "AuthorizedPersonId");

                    b.ToTable("PublicBiddingAuthorizedPerson");
                });

            modelBuilder.Entity("PublicBidding.Entities.PublicBiddingBuyer", b =>
                {
                    b.Property<Guid>("PublicBiddingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PublicBiddingId", "BuyerId");

                    b.ToTable("PublicBiddingBuyer");
                });

            modelBuilder.Entity("PublicBidding.Entities.PublicBiddingPlotPart", b =>
                {
                    b.Property<Guid>("PublicBiddingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlotPartId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PublicBiddingId", "PlotPartId");

                    b.ToTable("PublicBiddingPlotPart");
                });

            modelBuilder.Entity("PublicBidding.Entities.Status", b =>
                {
                    b.Property<Guid>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = new Guid("2233cbba-607a-4182-9f83-7ff8ffe6e5ac"),
                            StatusName = "Prvi krug"
                        },
                        new
                        {
                            StatusId = new Guid("770a32d4-1db9-4844-868e-6bf8171ffc20"),
                            StatusName = "Drugi krug sa novim uslovima"
                        },
                        new
                        {
                            StatusId = new Guid("28273376-994b-461d-8097-d03654c5268d"),
                            StatusName = "Drugi krug sa starim uslovima"
                        });
                });

            modelBuilder.Entity("PublicBidding.Entities.Type", b =>
                {
                    b.Property<Guid>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            TypeId = new Guid("8010f254-e872-49d9-9c2c-1d5783719019"),
                            TypeName = "Javna licitacija"
                        },
                        new
                        {
                            TypeId = new Guid("9b926999-151c-458c-8ae8-3d4a7e9f6459"),
                            TypeName = "Otvaranje zatvorenih ponuda"
                        });
                });

            modelBuilder.Entity("PublicBidding.Entities.PublicBidding", b =>
                {
                    b.HasOne("PublicBidding.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicBidding.Entities.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PublicBidding.Entities.PublicBiddingAuthorizedPerson", b =>
                {
                    b.HasOne("PublicBidding.Entities.PublicBidding", "PublicBidding")
                        .WithMany()
                        .HasForeignKey("PublicBiddingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublicBidding");
                });

            modelBuilder.Entity("PublicBidding.Entities.PublicBiddingBuyer", b =>
                {
                    b.HasOne("PublicBidding.Entities.PublicBidding", "PublicBidding")
                        .WithMany()
                        .HasForeignKey("PublicBiddingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublicBidding");
                });

            modelBuilder.Entity("PublicBidding.Entities.PublicBiddingPlotPart", b =>
                {
                    b.HasOne("PublicBidding.Entities.PublicBidding", "PublicBidding")
                        .WithMany()
                        .HasForeignKey("PublicBiddingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PublicBidding");
                });
#pragma warning restore 612, 618
        }
    }
}
