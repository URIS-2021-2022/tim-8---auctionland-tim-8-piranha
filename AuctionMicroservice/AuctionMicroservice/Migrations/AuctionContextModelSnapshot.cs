// <auto-generated />
using System;
using AuctionMicroservice.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AuctionMicroservice.Migrations
{
    [DbContext(typeof(AuctionContext))]
    partial class AuctionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuctionMicroservice.Entities.Auction", b =>
                {
                    b.Property<Guid>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApplicationDeadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuctionNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PriceStep")
                        .HasColumnType("int");

                    b.Property<int>("Restriction")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("AuctionId");

                    b.ToTable("auction");

                    b.HasData(
                        new
                        {
                            AuctionId = new Guid("6a421c13-a195-48f7-8dbd-67596c3974c0"),
                            ApplicationDeadline = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AuctionNum = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PriceStep = 13,
                            Restriction = 25,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("AuctionMicroservice.Entities.AuctionPublicBidding", b =>
                {
                    b.Property<Guid>("PublicBiddingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PublicBiddingId");

                    b.HasIndex("AuctionId");

                    b.ToTable("auctionPublicBidding");
                });

            modelBuilder.Entity("AuctionMicroservice.Entities.DocumentationIndividual", b =>
                {
                    b.Property<Guid>("DocumentationIndividualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentationIndividualId");

                    b.HasIndex("AuctionId");

                    b.ToTable("documentationIndividual");

                    b.HasData(
                        new
                        {
                            DocumentationIndividualId = new Guid("6a411a17-a195-48f7-8dbd-67596c3974c0"),
                            AuctionId = new Guid("6a421c13-a195-48f7-8dbd-67596c3974c0"),
                            FirstName = "Stefan",
                            IdentificationNumber = "0214120948120",
                            Surname = "Zoric"
                        });
                });

            modelBuilder.Entity("AuctionMicroservice.Entities.DocumentationLegalEntity", b =>
                {
                    b.Property<Guid>("DocumentationLegalEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentationLegalEntityId");

                    b.HasIndex("AuctionId");

                    b.ToTable("documentationLegalEntity");

                    b.HasData(
                        new
                        {
                            DocumentationLegalEntityId = new Guid("6a411c13-a295-48f7-8dbd-67596c3974c0"),
                            Address = "Uzun mirkova 8",
                            AuctionId = new Guid("6a421c13-a195-48f7-8dbd-67596c3974c0"),
                            IdentificationNumber = "17",
                            Name = "Goran"
                        });
                });

            modelBuilder.Entity("AuctionMicroservice.Entities.AuctionPublicBidding", b =>
                {
                    b.HasOne("AuctionMicroservice.Entities.Auction", "auction")
                        .WithMany()
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("auction");
                });

            modelBuilder.Entity("AuctionMicroservice.Entities.DocumentationIndividual", b =>
                {
                    b.HasOne("AuctionMicroservice.Entities.Auction", "Auction")
                        .WithMany("DocumentationIndividual")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("AuctionMicroservice.Entities.DocumentationLegalEntity", b =>
                {
                    b.HasOne("AuctionMicroservice.Entities.Auction", "Auction")
                        .WithMany("DocumentationLegalEntity")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("AuctionMicroservice.Entities.Auction", b =>
                {
                    b.Navigation("DocumentationIndividual");

                    b.Navigation("DocumentationLegalEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
